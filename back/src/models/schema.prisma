// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
        provider = "prisma-client-js"
}

datasource db {
        provider = "postgresql"
        url      = env("DATABASE_URL")
}

model User {
        id                          Int                           @id @default(autoincrement())
        name                        String
        email                       String                        @unique
        hash                        String
        salt                        String
        imgUrl                      String                        @default("")
        cloths                      Cloth[]
        userPosts                   UserPost[]
        ForecastClothReccomendation ForecastClothReccomendation[]
}

model UserPost {
        userId    Int
        clothName String
        user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
        cloth     Cloth  @relation(fields: [userId, clothName], references: [userId, clothName], onDelete: Cascade)

        date     DateTime @default(now())
        postText String

        @@id([userId, clothName, date])
}

model Cloth {
        clothName     String  @unique
        userId        Int
        clothCategory String
        clothType     Float
        clothColor    String
        imageUrl      String?

        user User @relation(fields: [userId], references: [id], onDelete: Cascade)

        userPost              UserPost[]
        forecastRecomendation ForecastClothReccomendation[]

        @@id([userId, clothName])
}

model ForecastClothReccomendation {
        clothName  String
        userId     Int
        forecastId Int
        user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
        forecast   Forecast @relation(fields: [forecastId], references: [id], onDelete: Cascade)
        cloth      Cloth    @relation(fields: [clothName], references: [clothName], onDelete: Cascade)

        @@id([clothName, forecastId])
}

model Forecast {
        id              Int      @id @default(autoincrement())
        city            String
        date            DateTime
        weather         String
        temperature     Float
        rainProbability Float

        forecastRecommendation ForecastClothReccomendation[]
}
